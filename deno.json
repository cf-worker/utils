{
  "$schema": "https://raw.githubusercontent.com/denoland/deno/refs/heads/main/cli/schemas/config-file.v1.json",
  "name": "@cf-worker/utils",
  "version": "0.4.4",
  "imports": {
    "@std/assert": "jsr:@std/assert@^1.0.14",
    "@std/fs": "jsr:@std/fs@^1.0.19",
    "@std/testing": "jsr:@std/testing@^1.0.15",
    "@svarta/walk-it": "jsr:@svarta/walk-it@^5.0.1",
    "bun": "./bun_polyfill.deno.ts",
    "bun:test": "./bun_test.deno.ts"
  },
  "exports": "./mod.ts",
  "fmt": {
    "indentWidth": 2,
    "lineWidth": 100,
    "proseWrap": "preserve",
    "semiColons": false,
    "singleQuote": false,
    "useTabs": false
  },
  "nodeModulesDir": "auto",
  "publish": {
    "exclude": [
      "**/*.test.ts",
      "**/*.deno.ts",
      "lab/**/*"
    ],
    "include": [
      "**/*.ts",
      "README.md"
    ]
  },
  "tasks": {
    "build:mod": "deno run -A build-mod.deno.ts",
    "check-deps": "deno run -A jsr:@check/deps --allow-unused",
    "coverage": "rm -rf coverage; deno test -A --clean --parallel --coverage; deno coverage --html; deno coverage --detailed; echo open coverage/html/index.html",
    "doc-lint": "deno doc --lint *.ts",
    "fmt": "deno fmt",
    "format-deno-json": "deno run -A npm:json-sort-cli deno.json &&deno run -A npm:sort-package-json deno.json",
    "git-pre-commit": "deno task build:mod && deno task test && deno task fmt && deno task lint && deno task format-deno-json && deno task coverage",
    "git-pre-commit:install": "test -e '.git' && git config core.hooksPath ./.githooks",
    "git-pre-commit:test": "git hook run pre-commit",
    "lint": "deno lint --fix --compact",
    "publish": "deno publish",
    "publish:dry": "deno publish --dry-run --allow-dirty -q",
    "test": "deno test -A --doc --parallel --check --fail-fast"
  },
  "test": {
    "exclude": [
      "lab/"
    ]
  }
}
